<Window x:Class="ChimeHelperUX.MeetingNotificationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Icon="/Icons/fan.ico"
        Title="Chime Helper Settings" Height="300" Width="400">
  <StackPanel>
    <Border Background="#192A38" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="42" Width="403">
      <StackPanel Orientation="Horizontal" Margin="0,0,5,0">
        <TextBlock VerticalAlignment="Center" FontSize="25" Foreground="White" FontWeight="Light" Margin="5,0,0,0" Width="432">📞 Scheduled Chime Call</TextBlock>
      </StackPanel>
    </Border>

    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap">A Chime Meeting is about to start, you can join it (or ignore it) below. You can also select a specific meeting from the grid. This window will auto hide in <Run Text="{Binding RemainingTimeString, Mode=OneWay}" Name="RemainingTimeText"></Run>.</TextBlock>

    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
      <Button Name="refresh" Click="refresh_Click">Refresh</Button>
      <Button Name="btnJoinCall" Click="btnJoinCall_Click" Margin="0,20, 20, 0" Padding="5,5,5,5" Width="75" FontSize="30" Foreground="Green" Background="White">📞</Button>
      <Button Name="btnIgnore" Click="btnIgnore_Click" Margin="0,20,0,0"  Padding="5,5,5,5" Width="75" Foreground="Red" Background="White">
        <Button.Content>
          <TextBlock Height="40" Width="44" FontSize="30" Padding="0,0,0,0" RenderTransformOrigin="0.45,0.6">
            <TextBlock.RenderTransform>
              <RotateTransform Angle="135"/>
            </TextBlock.RenderTransform>
            📞
          </TextBlock>
        </Button.Content>
      </Button>
    </StackPanel>

    <DataGrid x:Name="ChimeMeetings" ItemsSource="{Binding}" 
                  AutoGenerateColumns="False" SelectionMode="Single" 
                  CanUserAddRows="False" CanUserResizeColumns="False" CanUserReorderColumns="False" 
                  CanUserSortColumns="False" CanUserResizeRows="False"
                  HorizontalGridLinesBrush="Transparent" VerticalGridLinesBrush="LightGray"
                  Background="#192a38" RowHeaderWidth="0"
                  Visibility="{Binding IsEmpty, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                  >
      <DataGrid.Resources>
        <Style TargetType="{x:Type DataGridCell}">
          <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
              <Setter Property="Background" Value="White" />
              <Setter Property="BorderBrush" Value="White"/>
              <Setter Property="Foreground" Value="Black"/>
            </Trigger>
          </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
          <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
              <Setter Property="Background" Value="#CCDAFF" />
              <Setter Property="BorderBrush" Value="White"/>
              <Setter Property="Foreground" Value="Black"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.Resources>
      <DataGrid.ColumnHeaderStyle>
        <Style>
          <Setter Property="Control.Background" Value="White"/>
          <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
          <Setter Property="Control.FontWeight" Value="Bold"/>
          <Setter Property="Control.Padding" Value="0,5,0,5"/>
        </Style>
      </DataGrid.ColumnHeaderStyle>
      <DataGrid.RowStyle>
        <Style TargetType="DataGridRow">
          <Setter Property="Background" Value="White"></Setter>
          <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="#007980" />
              <Setter Property="Foreground" Value="White"/>
              <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.RowStyle>
      <DataGrid.Columns>
        <DataGridTemplateColumn Header="Start" MinWidth="50">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding StartTime, StringFormat={}{0:HH:mm}}" Margin="5,0,5,0" HorizontalAlignment="Center"></TextBlock>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="End">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding EndTime, StringFormat={}{0:HH:mm}}" Margin="5,0,5,0" HorizontalAlignment="Center"></TextBlock>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Pin">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Pin}" Margin="5,0,5,0" HorizontalAlignment="Center" />
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Meeting">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Subject}" TextTrimming="CharacterEllipsis" Margin="5,0,5,0"></TextBlock>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>
      <i:Interaction.Triggers>
        <i:EventTrigger EventName="SelectionChanged">
          <i:InvokeCommandAction Command="{Binding JoinMeetingCommand}" 
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" />
        </i:EventTrigger>
      </i:Interaction.Triggers>

    </DataGrid>

  </StackPanel>
</Window>
